package Client;


import getRequests.*;

import java.io.IOException;

public class SpotifyClient extends SpotifyRestAPI{

    /*

    Instance attributes

     */

    /**

     private String secretKey - Api interface secret key

     */

    private String secretKey;

    /**

    private String apiKey - Api interface api key

     */

    private String apiKey;

    /**

    private String token - Api interface token

     */

    private String token;

    /**

    private Album album - Api interface Album object

     */

    private Album album;

    /**

    private Artist artists - Api interface Artist Object

     */

    private Artist artists;

    /**

    private String ISOCountryCode - Api interface ISO Country Code (US,EU)

     */

    private String ISOCountryCode;

    /**

    private Seed seed - Api interface Seed object

     */

    private Seed seed;

    /**

    private Episode episodes - Api interface Episode object

     */

    private Episode episodes;

    /**

    private Follow follow - Api interface Follow object

     */

    private Follow follow;

    /**

    private User userIds - Api interface User object

     */

    private User userIds;

    /**

    private Track trackIds - Api interface Track object

     */

    private Track trackIds;

    /**

    private Show show - Api interface Show object

     */

    private Show show;

    /**

    private Player player - Api interface Player object

     */

    private Player player;

    /**

    private Playlist playlist - Api interface Playlist object

     */

    private Playlist playlist;

    /**

    private Search search - Api interface Search object

     */

    private Search search;

    /**

    private SpotifyLogin login - Spotify Login credentials used for logging in and acquiring access token to utilize REST API methods

     */

    private SpotifyLogin login;

    /**

    private Category category - Api interface Category object

     */

    private Category category;

    /**

    private Personalization personalization - Api interface Personalization object

     */

    private Personalization personalization;

    /**

    No arg constructor - creates an instance of SpotifyClient with a default api key and default secret key
    Initializes all instance variables

     */

    public SpotifyClient() {
        super();
        this.apiKey = "defaultapikey";
        this.secretKey = "defaultsecretkey";
    }

    /**

    2 arg constructor
    String apiKey : Api Key of Spotify Developer Account
    String secretKey : Secret Key of Spotify Developer Account
    Initializes all instance variables

     */

    public SpotifyClient(String apiKey, String secretKey) throws IOException {
        super();
        this.secretKey = secretKey;
        this.apiKey = apiKey;
        implicitGrantTokenRequest();
        this.album = new Album();
        this.artists = new Artist();
        this.seed = new Seed();
        this.episodes = new Episode();
        this.follow = new Follow();
        this.userIds = new User();
        this.trackIds = new Track();
        this.show = new Show();
        this.player = new Player();
        this.playlist = new Playlist();
        this.search = new Search();
        this.login = new SpotifyLogin();
        this.category = new Category();
        this.personalization = new Personalization();
    }

    /**

    3 arg constructor
    String apiKey : Api Key of Spotify Developer Account
    String secretKey : Secret Key of Spotify Developer Account
    String token : Access Token Generated by using implicit grant request

     */

    public SpotifyClient(String apiKey, String secretKey, String token) throws IOException {
        super();
        this.secretKey = secretKey;
        this.apiKey = apiKey;
        implicitGrantTokenRequest();
        this.album = new Album();
        this.artists = new Artist();
        this.seed = new Seed();
        this.episodes = new Episode();
        this.follow = new Follow();
        this.userIds = new User();
        this.trackIds = new Track();
        this.show = new Show();
        this.player = new Player();
        this.playlist = new Playlist();
        this.search = new Search();
        this.login = new SpotifyLogin();
        this.category = new Category();
        this.personalization = new Personalization();
    }

    /**
     * Gets personalization object to be used with Personalization API Calls
     * @return Personalization object
     */

    public Personalization getPersonalization() {
        return personalization;
    }

    /**
     * Sets the personalization instance attribute of SpotifyClient to the Personalization object passed
     * @return void
     * @param personalization - Personalization object
     */

    public void setPersonalization(Personalization personalization) {
        this.personalization = personalization;
    }

    /**
     * Returns the SpotifyClient's SpotifyLogin instance attribute
     * @return SpotifyLogin instance
     */

    public SpotifyLogin getLogin() {
        return login;
    }

    /**
     * Updates the SpotifyClient's SpotifyLogin instance to the SpotifyLogin instance passed into the function
     * @return void
     * @param newLogin - SpotifyLogin instance
     */

    public void setLogin(SpotifyLogin newLogin) {
        login = newLogin;
    }

    /**
     * Returns SpotifyLogin's Category instance attribute
     * @return Category instance
     */

    public Category getCategory() {
        return category;
    }

    /**
     * Sets the SpotifyLogin's Category instance attribute to the Category instance passed into the function
     * @return void
     * @param category - Category instance
     */

    public void setCategory(Category category) {
        this.category = category;
    }

    /**
     * Returns SpotifyLogin's Search instance attribute
     * @return Search instance
     */

    public Search getSearch() {
        return search;
    }

    /**
     * Sets the search instance of the Spotify Client to the Search instance passed into the function
     * @return void
     * @param items - Search instance
     */

    public void setSearch(Search items) {
        this.search = items;
    }

    /**
     *
     * Gets the Playlist instance attribute of the SpotifyClient instance
     * @return Playlist instance
     */

    public Playlist getPlaylist() {
        return playlist;
    }

    /**
     * Sets the SpotifyClient's Playlist instance to the Playlist instance passed into the function
     * @return void
     * @param playlist - Playlist instance
     */

    public void setPlaylist(Playlist playlist) {
        this.playlist = playlist;
    }

    /**
     * Gets the SpotifyClient's Player instance
     * @return Player instance
     */

    public Player getPlayer() {
        return player;
    }

    /**
     * Sets the SpotifyClient's Player instance attribute to the Player instance passed into the function
     * @return void
     * @param player
     */

    public void setPlayer(Player player) {
        this.player = player;
    }

    /**
     * Returns the SpotifyClient's User instance
     * @return User instance
     */

    public User getUser() {
        return userIds;
    }

    /**
     *
     * Returns the SpotifyClient's User instance
     * @return void
     * @param userIds - User instance
     */

    public void setUserIds(User userIds) {
        this.userIds = userIds;
    }

    /**
     *
     * Returns the SpotifyClient's Show instance
     * @return Show instance
     */

    public Show getShow() {
        return show;
    }

    /**
     *
     * Sets the SpotifyClient's Show instance to the Show instance passed into the function
     * @return void
     * @param show - Show instance
     */

    public void setShow(Show show) {
        this.show = show;
    }

    /**
     *
     * Returns the SpotifyClient's Track instance
     * @return Track instance
     */

    public Track getTrackIds() {
        return trackIds;
    }

    /**
     * Sets the SpotifyClient's Track instance to the Track instance passed into the function
     * @return void
     * @param trackIds
     */

    public void setTrackIds(Track trackIds) {
        this.trackIds = trackIds;
    }

    /**
     *
     * Returns SpotifyClient's ISO Country Code
     * @return String - ISO Country Code
     */

    public String getISOCountryCode() {
        return ISOCountryCode;
    }

    /**
     *
     * Sets the SpotifyClient's ISOCountryCode to the String passed into the function
     * @param ISOCountryCode - String
     */

    public void setISOCountryCode(String ISOCountryCode) {
        this.ISOCountryCode = ISOCountryCode;
    }

    /**
     *
     * Gets the SpotifyClient's Artist instance
     * @return - Artist instance
     */

    public Artist getArtists() {
        return artists;
    }

    /**
     * Sets the SpotifyClient's Album instance to the Album instance passed into the function
     * @return void
     * @param album - Album instance
     */

    public void setAlbum(Album album) {
        this.album = album;
    }


    /**
     * Sets the SpotifyClient's Artist instance to the Artist instance passed into the function
     * @return void
     * @param artists - Artist Instance
     */

    public void setArtists(Artist artists) {
        this.artists = artists;
    }

    /**
     *
     * Clears all of SpotifyClient's Album album ids
     * @return void
     */

    public void clearAlbums(){
        this.album.getAlbumIds().clear();
    }

    /**
     *
     * Clears all of SpotifyClient's Artist artist ids
     * @return void
     */
    public void clearArtists(){
        this.artists.getArtistsIDs().clear();
    }


    /**
     *
     * Returns SpotifyClient's Album instance
     * @return Album instance
     */

    public Album getAlbum() {
        return album;
    }

    /**
     *
     * Returns SpotifyClient's secret key variable
     * @return String - secret key
     */

    public String getSecretKey() {
        return secretKey;
    }

    /**
     * Returns SpotifyClient's api key variable
     * @return String - api key
     */

    public String getApiKey() {
        return apiKey;
    }


    /**
     *
     * Sets SpotifyClient's secret key variable to the String passed into the function
     * @param secretKey - String
     */

    public void setSecretKey(String secretKey) {
        this.secretKey = secretKey;
    }

    /**
     *
     * Sets SpotifyClient's api key variable to the String passed into the function
     * @param apiKey - String
     */

    public void setApiKey(String apiKey) {
        this.apiKey = apiKey;
    }

    /**
     *
     * Sets SpotifyClient's token variable to the String passed into the function
     * @param token - String
     */

    public void setToken(String token){
        this.token = token;
    }

    /**
     *
     * Gets SpotifyClient's token variable
     * @return String - token variable
     */

    public String getToken(){
        return this.token;
    }

    /**
     *
     * Initiates SpotifyRestAPI's implicit grant token request using the SpotifyClient instance making this function call, then sets the token to the String returned
     *
     * @return void
     * @throws IOException - Exception from Implicit Grant Request
     */

    public void implicitGrantTokenRequest() throws IOException {
        String theToken = super.baseAuth(this);
        this.setToken(theToken);
    }

    /**
     *
     * Returns SpotifyClient's Seed instance
     * @return Seed instance
     */

    public Seed getSeed() {
        return seed;
    }

    /**
     *
     * Sets SpotifyClient's Seed instance to the Seed instance passed into the function
     * @param seed - Seed instance
     */

    public void setSeed(Seed seed) {
        this.seed = seed;
    }

    /**
     * Returns SpotifyClient's Episode instance
     * @return Episode instance
     */

    public Episode getEpisode() {
        return episodes;
    }

    /**
     * Sets SpotifyClient's Episode instance to the Episode instance passed into the function
     * @param episodes - Episode instance
     */

    public void setEpisodes(Episode episodes) {
        this.episodes = episodes;
    }

    /**
     *
     * Gets SpotifyClient's Follow instance
     * @return Follow instance
     */

    public Follow getFollow() {
        return follow;
    }

    /**
     *
     * Sets SpotifyClient's Follow instance to the Follow instance passed into the function
     * @param follow - Follow instance
     */

    public void setFollow(Follow follow) {
        this.follow = follow;
    }
}
